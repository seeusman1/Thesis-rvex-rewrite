
# This makefile contains extensions of the targets in the almarvi/ directory
# that only work as a platform within the rvex-rewrite repository. All targets
# within the almarvi/ directory operate independently.

top: help

# Include tool configuration from the almarvi repo.
include almarvi/tools.makefile

#-------------------------------------------------------------------------------
# r-VEX library management
#-------------------------------------------------------------------------------

RVLIB_SOURCE   = ../../lib/rvex

RVLIB_SOURCES  = $(addprefix $(realpath $(RVLIB_SOURCE)/common)/,$(shell cat $(RVLIB_SOURCE)/common/vhdlsyn.txt))
RVLIB_SOURCES += $(addprefix $(realpath $(RVLIB_SOURCE)/utils)/, $(shell cat $(RVLIB_SOURCE)/utils/vhdlsyn.txt))
RVLIB_SOURCES += $(addprefix $(realpath $(RVLIB_SOURCE)/bus)/,   $(shell cat $(RVLIB_SOURCE)/bus/vhdlsyn.txt))
RVLIB_SOURCES += $(addprefix $(realpath $(RVLIB_SOURCE)/core)/,  $(shell cat $(RVLIB_SOURCE)/core/vhdlsyn.txt))
RVLIB_SOURCES += $(addprefix $(realpath $(RVLIB_SOURCE)/cache)/, $(shell cat $(RVLIB_SOURCE)/cache/vhdlsyn.txt))
RVLIB_SOURCES += $(realpath $(RVLIB_SOURCE)/system/rvsys_standalone_pkg.vhd)
RVLIB_SOURCES += $(realpath $(RVLIB_SOURCE)/system/rvsys_standalone_core.vhd)
RVLIB_SOURCES += $(realpath $(RVLIB_SOURCE)/system/rvsys_standalone_cachedCore.vhd)
RVLIB_SOURCES += $(realpath $(RVLIB_SOURCE)/system/rvsys_standalone.vhd)
RVLIB_SOURCES += $(realpath $(RVLIB_SOURCE)/periph/periph_trace.vhd)

RVLIB_DEPS     = $(filter-out %rvex-version-pkg.vhd,$(RVLIB_SOURCES))

RVLIB          = almarvi/rvex/rtl/rvex

.PHONY: rvlib
rvlib: $(RVLIB)
$(RVLIB): $(RVLIB_DEPS)
	
	# Generate core version tag and archive the core files.
	$(PYTHON) ../../versions/tools/archive_core.py
	
	# Copy the core files into the almarvi repo.
	$(RM) -r $(RVLIB)
	$(MKDIR) -p $(RVLIB)
	$(CP) $(RVLIB_SOURCES) $(RVLIB)
	
	# Change the rvex library name to work to make the IP inclusion easier.
	$(SED) -e 's/^library rvex;/library work;/' -i'' $(RVLIB)/*.vhd
	$(SED) -e 's/^use rvex\./use work./' -i'' $(RVLIB)/*.vhd
	$(SED) -e 's/: entity rvex\./: entity work./' -i'' $(RVLIB)/*.vhd
	
	# Output compile order.
	-$(RM) $(RVLIB)/compile-order
	for i in $(notdir $(RVLIB_SOURCES)); do echo $$i >> $(RVLIB)/compile-order; done


#-------------------------------------------------------------------------------
# rvsrv/rvd tools
#-------------------------------------------------------------------------------

RVD_SOURCE     = ../../tools/debug-interface
RVD_INC        = rvd-inc
RVD            = almarvi/drivers/rvd

.PHONY: rvd
rvd: $(RVD)
$(RVD): $(RVD_SOURCE) $(RVD_INC)
	$(RM) -r $(RVD)
	$(MKDIR) -p $(RVD)
	$(CP) -r $(RVD_SOURCE)/* $(RVD)
	$(RM) $(RVD)/configuration.cfg
	cd $(RVD) && $(MAKE) clean
	$(RM) $(RVD)/configuration.cfg $(RVD)/memory.map $(RVD)/core.template.map
	$(MV) $(RVD)/core.map $(RVD)/rvex-core.map
	$(MV) $(RVD)/src/default-memory.map $(RVD)/rvex.map
	$(RM) $(RVD)/src/default-configuration.cfg
	$(RM) $(RVD)/makefile $(RVD)/USAGE
	$(CP) -r $(RVD_INC)/* $(RVD)


#-------------------------------------------------------------------------------
# Chain to the makefile in examples/
#-------------------------------------------------------------------------------

.PHONY: upload-%
upload-%:
	cd examples && $(MAKE) $@

.PHONY: start-%
start-%:
	cd examples && $(MAKE) $@

.PHONY: run-%
run-%:
	cd examples && $(MAKE) $@

.PHONY: trace-%
trace-%:
	cd examples && $(MAKE) $@

.PHONY: gdb-%
gdb-%:
	cd examples && $(MAKE) $@

.PHONY: server stop monitor monitor-nobuf
server stop monitor monitor-nobuf:
	cd examples && $(MAKE) $@

.PHONY: debug
debug:
	cd examples && $(MAKE) $@
	cat ../../tools/debug-interface/debug > debug
	echo 'export RVD_OPT="-m$(shell pwd)/rvd-inc/almarvi.map"' >> debug
	@echo ""
	@echo " Run \"source debug\" now..."
	@echo ""

.PHONY: clean-ex
clean-ex:
	cd examples && $(MAKE) clean


#-------------------------------------------------------------------------------
# Chain to the makefile in almarvi/
#-------------------------------------------------------------------------------

.DEFAULT:
	$(MAKE) rvlib rvd
	@cd almarvi && $(MAKE) --no-print-directory $@

.PHONY: clean-almarvi
clean-almarvi:
	cd almarvi && $(MAKE) clean


#-------------------------------------------------------------------------------
# Distribution
#-------------------------------------------------------------------------------

.PHONY: dist
dist: rvlib
	$(GIT) ls-files -io --exclude-standard almarvi > ignored
	$(PYTHON) dist.py
	$(RM) ignored

#-------------------------------------------------------------------------------
# Cleaning
#-------------------------------------------------------------------------------

.PHONY: clean
clean: clean-ex clean-almarvi
	$(RM) -r $(RVD)
	$(RM) -r $(RVLIB)


