
Table of contents:
 - Supported features and configuration options
 - Cache & MMU block diagram: epic ASCII art overview of the entire cache for
   an 8-way reconfigurable core
 - Input request and response register timing and circuitry
 - Address translation dataflow and naming
 - Page table/directory structure (memory map)
 - Pseudocode for TLB/table walker operations
 - Random notes

################################################################################################################################################################################################################################################

 S U P P O R T E D   F E A T U R E S   A N D   C O N F I G U R A T I O N   O P T I O N S
 
################################################################################################################################################################################################################################################


CACHE
=====

 - Design-time configurable line size in power-of-2 words/max-width
   instructions.
   
 - Five supported data memory types:
 
    * Physical: bypasses the cache and MMU to an alternative bus, if enabled at
      design-time.
      
    * Uncacheable: bypasses the cache.
    
    * Write-through: writes bypass the cache, reads are cached.
    
    * Write-combining: reads and writes go to the cache. That is, writes don't
      go to the bus directly, but are instead buffered in the cache by flagging
      the affected (part of a) line as dirty. While idle, the cache block state
      machine will loop through the cache block looking for dirty lines to
      flush to main memory. Reconfiguration is blocked while lines are dirty,
      so the effectiveness of this memory type depends on the application.
      
    * Local/streaming: reads and writes go to the cache. Contrary to
      write-combining mode, local/streaming lines are NOT automatically flushed
      to main memory unless a reconfiguration is pending, and are therefore
      also NOT coherent. To prevent the flush to main memory in the event of a
      reconfiguration, a command may be given to just invalidate all
      local/streaming lines, if the local data will not be used in the future.
      This memory type is particularly useful for streaming, as the caches of
      a lane group are also readable by the next lane group, if that connection
      is enabled at design- and runtime. It may also be useful for the stack in
      normal multi-processing applications to save some bus traffic.
   
   The instruction memory only supports cached mode.
   
 - Valid/dirty bits per byte, preventing the need to do a read-modify operation
   when a write is made to only part of a line.
   
 - Multiple simultaneous data accesses by a single context are supported. The
   cache will handle these as quickly as it can. In the worst case, it is no
   slower than dividing the accesses up into multiple instructions. In the best
   case, the accesses happen to be part of the same cache line, in which case
   they are handled simultaneously. It is also possible to enable odd/even
   banking at design time, in which case accesses belonging to odd cache lines
   can be handled simultaneously to accesses belonging to even cache lines.
   Similarly, the address translation only needs to be done once if all
   accesses happen to be part of the same page.

 - The stalling model that allows the above also naturally allows writes to
   execute in a single cycle, as long as the next instruction either does not
   include a memory access or its memory access can be serviced by a hit in
   another block.
 
 - Load-link/store-conditional is supported, as long as all cores use
   write-through to access the memory location.
   
 - If so configured at design-time, the cache size can be changed per block at
   runtime, to augment power consumption or just to test the effect of cache
   size on an application without resynthesizing.
   
   
MMU
===

 - Configurable page size, large page size, and ASID width.
 
 - Hardware page walker with features based on x86-32, with a runtime-optional
   executable bit flag in addition.

 - Caches larger than a page are supported by means of a predictor.


################################################################################################################################################################################################################################################

 C A C H E   &   M M U   B L O C K   D I A G R A M
 
################################################################################################################################################################################################################################################



              Optional stage                                                                                 One or more clock cycles                                                                         Optional stage
              '''''':'''''''                                                                                 ''''''''''':''''''''''''                                                                         '''''':'''''''
                    :                                                                                                   :                                                                            From previous  :
                    :  To previous                                                                                      :                                                                             r-VEX cache   :
                    :  r-VEX cache                                                                                      :                                                                                 | |       :
                    :       ^                                                                                           :                                                                                 | '-----. :
                    :       |                     .--------.        .--------.                                  .-------------------------.                     .--------.        .--------.              '-----. | :
                    :       |                 .-->| Alt. A |------->| Alt. A |--------------------------------->|  Alternate bus access   |-------------------->| Alt. D |------->| Alt. D |--------------.     v v :
         .     .----------. |  .-----------.  |   |        |        |        |                                  '-------------------------'                     |        |        |        |              |    .----------.     ,
          |    | Request  |-o->|     , alt |--'   | .--------.      | .--------.                                .-------------------------.                     | .--------.      | .--------.            '--->| Response |    |
          |--->| register |    | Sw. - evn |------+>| Even X |------+>| Even X |---------------------o--------->|     Even data cache     |---------------------+>| Even X |------+>| Even X |--------------o->| register |--->|
          |    | lnGrp 0  | .->|     ` odd |--.   | |        |      | |        |                     |          |         block 0         |<-----.              | |        |      | |        |            .-+->| lnGrp 0  |    |
          |    '----------' |  '-----------'  |   | | .--------.    | | .--------.                   |          '-------------------------'      |              | | .--------.    | | .--------.          | |  '----------'    |
          |         :       |                 '---+-+>| Odd X  |----+-+>| Odd X  |-------------------+-o---.    .-------------------------.    .-+--------------+-+>| Odd X  |----+-+>| Odd X  |----------o |       :          |
          |         :       |                     | | |        |    | | |        |                  _|_|_  '--->|     Odd data cache      |----' |              | | |        |    | | |        |          | '-----. :          |
          |         :       |                     | | |        |    | | |        |                  \___/       |         block 0         |<---. |              | | |        |    | | | .--------.        '-----. | :          |
          |         :       |                 .-->| | |        |    | | |        |                    |         '-------------------------'   _|_|_             | | |        |(---+-+-+>| Alt. D |--------.     v v :          |
          |    .----------. |  .-----------.  |   '-| |        |    | | |        |                    |                 :                     \___/             '-| |        |    | | | |        |        |    .----------.    |
          |    | Request  |-o->|     , alt |--'     | |        |    | | | .--------.                  |         .-------------------------.     ^                 | |        |    | | | | .--------.      '--->| Response |    |
          |--->| register |    | Sw. - evn |------->| |        |(---+-+-+>| Even X |-------------o----+-------->|     Even data cache     |-----+---------------->| |        |(---+-+-+-+>| Even X |--------o->| register |--->|
          |    | lnGrp 1  | .->|     ` odd |--.     '-|        |    | | | |        |             |    |         |         block 1         |<----+----.            '-|        |    | | | | |        |      .-|->| lnGrp 1  |    |
          |    '----------' |  '-----------'  |       |        |    | | | | .--------.           |    |         '-------------------------'     |    |              |        |    | | | | | .--------.    | |  '----------'    |
     Data |         :       |                 '------>|        |----+-+-+-+>| Odd X  |-----------+-o--+----.    .-------------------------.     |  .-+------------->|        |----+-+-+-+-+>| Odd X  |----o |       :          | Data
   access |         :       |                         '--------'    | | | | |        |          _|_|_ |    '--->|     Odd data cache      |-----+--' |              '--------'    | | | | | |        |    | '-----. :          | access
 requests |         :       |                     .--------.        | | | | |        |          \___/ |         |         block 1         |<----+--. |                            | | | | | |        |    '-----. | :          | responses
          |         :       |                 .-->| Alt. A |------->| | | | |        |            |   |         '-------------------------'     | _|_|_                           | | | | | |        |(---.     v v :          |
          |    .----------. |  .-----------.  |   |        |        '-| | | |        |            |   |                 :                       | \___/                           '-| | | | |        |    |    .----------.    |
          |    | Request  |-o->|     , alt |--'   | .--------.        | | | |        |            |   |         .-------------------------.     |   ^             .--------.        | | | | |        |    '--->| Response |    |
          |--->| register |    | Sw. - evn |------+>| Even X |------->| | | |        |(------o----+---+-------->|     Even data cache     |-----+---+------------>| Even X |------->| | | | |        |(-----o->| register |--->|
          |    | lnGrp 2  | .->|     ` odd |--.   | |        |        '-| | |        |       |    |   |         |         block 2         |<----+---+----.        |        |        '-| | | |        |    .-+->| lnGrp 2  |    |
          |    '----------' |  '-----------'  |   | | .--------.        | | |        |       |    |   |         '-------------------------'     |   |    |        | .--------.        | | | |        |    | |  '----------'    |
          |         :       |                 '---+-+>| Odd X  |------->| | |        |(------+-o--+---+----.    .-------------------------.     |   |  .-+--------+>| Odd X  |------->| | | |        |(---o |       :          |
          |         :       |                     | | |        |        '-| |        |      _|_|_ |   |    '--->|     Odd data cache      |-----+---+--' |        | |        |        '-| | |        |    | '-----. :          |
          |         :       |                     | | |        |          | |        |      \___/ |   |         |         block 2         |<----+---+--. |        | |        |          | | |        |    '-----. | :          |
          |         :       |                 .-->| | |        |          | |        |        |   |   |         '-------------------------'     |   | _|_|_       | |        |          | | |        |(---.     v v :          |
          |    .----------. |  .-----------.  |   '-| |        |          | |        |        |   |   |                 :                       |   | \___/       | |        |          '-| |        |    |    .----------.    |
          |    | Request  |-o->|     , alt |--'     | |        |          | |        |        |   |   |         .-------------------------.     |   |   ^         | |        |            | |        |    '--->| Response |    |
          |--->| register |    | Sw. - evn |------->| |        |(-------->| |        |(--o----+---+---+-------->|     Even data cache     |-----+---+---+-------->| |        |(---------->| |        |(-----o->| register |--->|
          |    | lnGrp 3  | .->|     ` odd |--.     '-|        |          '-|        |   |    |   |   |         |         block 3         |<----+---+---+----.    '-|        |            '-|        |    .-+->| lnGrp 3  |    |
         '     '----------' |  '-----------'  |       |        |            |        |   |    |   |   |         '-------------------------'     |   |   |    |      |        |              |        |    | |  '----------'     `
                    :       |                 '------>|        |----------->|        |---+-o--+---+---+----.    .-------------------------.     |   |   |  .-+----->|        |------------->|        |----o |       :
                    :       |                         '--------'            '--------'  _|_|_ |   |   |    '--->|     Odd data cache      |-----+---+---+--' |      '--------'              '--------'    | |       :
                    :       |                                                           \___/ |   |   |         |         block 3         |<----+---+---+--. |                                            v v       :
                    :   From next                                                         |   |   |   |         '-------------------------'     |   |   | _|_|_                                         To next     :
                    :  r-VEX cache                                                        |   |   |   |                 :                       |   |   | \___/                                       r-VEX cache   :
                    :                                                                     |   |   |   |     .---------------.   .---.   .---.   |   |   |   ^                                                       :
                    :                                                       .--------.    |   |   |   '---->|   Data TLB    |-->| D |-->| D |---'   |   |   |                                                       :
                    :                                                       |        |<---+---+---+-------->|    block 0    |   |TLB|   |TLB|       |   |   |                                                       :
                    :                                                       |        |    |   |   |         '---------------'   | X |   | X |       |   |   |                                                       :
                    :                                                       |        |    |   |   |         .---------------.   |   |   | .---.     |   |   |                                                       :
                    :                                                       |        |    |   |   '-------->|   Data TLB    |---|   |---+>| D |-----'   |   |                                                       :
                    :                                                       |        |<---+---+------------>|    block 1    |   '---'   | |TLB|         |   |                                                       :
                    :                                                       |        |    |   |             '---------------'           | | X |         |   |                                                       :
                    :                                                       |        |    |   |             .---------------.   .---.   | |   |         |   |                                                       :
                    :                                                       |        |    |   '------------>|   Data TLB    |-->| D |-->| |   |(--------'   |                                                       :
                    :                                                       |        |<---+---------------->|    block 2    |   |TLB|   '-|   |             |                                                       :
                    :                                                       |        |    |                 '---------------'   | X |     |   |             |                                                       :
                    :                                                       |        |    |                 .---------------.   |   |     |   |             |                                                       :
                    :                                                       |        |    '---------------->|   Data TLB    |---|   |---->|   |-------------'                                                       :
                    :                                                       |        |<-------------------->|    block 3    |   '---'     '---'                                                                     :
                    :                                                       | Table  |                      '---------------'                                                                                       :
                    :                                                       | walker |                      .---------------.   .---.   .---.                                                                       :
                    :                                                       |        |<-------------------->|  Instr. TLB   |-->| I |-->| I |---------------.                                                       :
                    :                                                       |        |    .---------------->|    block 0    |   |TLB|   |TLB|               |                                                       :
                    :                                                       |        |    |                 '---------------'   | X |   | X |               |                                                       :
                    :                                                       |        |    |                 .---------------.   |   |   | .---.             |                                                       :
                    :                                                       |        |<---+---------------->|  Instr. TLB   |---|   |---+>| I |---------.   |                                                       :
                    :                                                       |        |    |   .------------>|    block 1    |   '---'   | |TLB|         |   |                                                       :
                    :                                                       |        |    |   |             '---------------'           | | X |         |   |                                                       :
                    :                                                       |        |    |   |             .---------------.   .---.   | |   |         |   |                                                       :
                    :                                                       |        |<---+---+------------>|  Instr. TLB   |-->| I |-->| |   |(----.   |   |                                                       :
                    :                                                       |        |    |   |   .-------->|    block 2    |   |TLB|   '-|   |     |   |   |                                                       :
                    :                                                       |        |    |   |   |         '---------------'   | X |     |   |     |   |   |                                                       :
                    :                                                       |        |    |   |   |         .---------------.   |   |     |   |     |   |   |                                                       :
                    :                                                       |        |<---+---+---+-------->|  Instr. TLB   |---|   |---->|   |-.   |   |   |                                                       :
                    :                                                       '--------'    |   |   |   .---->|    block 3    |   '---'     '---' |   |   |   |                                                       :
                    :                                                                     |   |   |   |     '---------------'                   |   |   |   |                                                       :
                    :                                                                     |   |   |   |                 :                       |   |   |   |                                                       :           ,
         .     .----------.                                                               |   |   |   |         .-------------------------.     |   |   |   |                                   .---------.    .----------.    |
          |    | Request  |                         .--------.            .--------.      |   |   |   |         |       Instruction       |<----+---+---+---'    .--------.    .--------.       |syllable |--->| Response |--->|
          |--->| register |------------------------>| Insn X |----------->| Insn X |------o---+---+---+-------->|          cache          |-----+---+---+------->| Insn X |--->| Insn X |------>| select  |    | register |    |
          |    | lnGrp 0  |                         |        |            |        |          |   |   |         |         block 0         |     |   |   |        |        |    |        |       |  mux 0  |--->| lane 0-1 |--->|
          |    '----------'                         |        |            |        |          |   |   |         '-------------------------'     |   |   |        |        |    |        |       '---------'    '----------'    |
          |         :                               |        |            |        |          |   |   |                 :                       |   |   |        |        |    |        |                           :          |
          |    .----------.                         |        |            |        |          |   |   |         .-------------------------.     |   |   |        |        |    |        |       .---------.    .----------.    |
          |    | Request  |                         |        |            | .--------.        |   |   |         |       Instruction       |<----+---+---'        |        |    | .--------.     |syllable |--->| Response |--->|
          |--->| register |------------------------>|        |------------+>| Insn X |--------o---+---+-------->|          cache          |-----+---+----------->|        |----+>| Insn X |---->| select  |    | register |    |
          |    | lnGrp 1  |                         '--------'            | |        |            |   |         |         block 1         |     |   |            '--------'    | |        |     |  mux 1  |--->| lane 2-3 |--->|
  Program |    '----------'                                               | |        |            |   |         '-------------------------'     |   |                          | |        |     '---------'    '----------'    |
 counters |         :                                                     | |        |            |   |                 :                       |   |                          | |        |                         :          | Syllables
          |    .----------.                                               | |        |            |   |         .-------------------------.     |   |                          | |        |     .---------.    .----------.    |
          |    | Request  |                         .--------.            | |        |            |   |         |       Instruction       |<----+---'            .--------.    | |        |     |syllable |--->| Response |--->|
          |--->| register |------------------------>| Insn X |----------->| |        |(-----------o---+-------->|          cache          |-----+--------------->| Insn X |--->| |        |(--->| select  |    | register |    |
          |    | lnGrp 2  |                         |        |            '-|        |                |         |         block 2         |     |                |        |    '-|        |     |  mux 2  |--->| lane 4-5 |--->|
          |    '----------'                         |        |              |        |                |         '-------------------------'     |                |        |      |        |     '---------'    '----------'    |
          |         :                               |        |              |        |                |                 :                       |                |        |      |        |                         :          |
          |    .----------.                         |        |              |        |                |         .-------------------------.     |                |        |      |        |     .---------.    .----------.    |
          |    | Request  |                         |        |              |        |                |         |       Instruction       |<----'                |        |      |        |     |syllable |--->| Response |--->|
          |--->| register |------------------------>|        |------------->|        |----------------o-------->|          cache          |--------------------->|        |----->|        |---->| select  |    | register |    |
          |    | lnGrp 3  |                         '--------'              '--------'                          |         block 3         |                      '--------'      '--------'     |  mux 3  |--->| lane 6-7 |--->|
         '     '----------'                                                                                     '-------------------------'                                                     '---------'    '----------'    | 
                    :                                                                                                   :                                                                                           :           `
.                   :                                                                                                   :                                                                                           :



################################################################################################################################################################################################################################################

 I N P U T   R E Q U E S T   A N D   R E S P O N S E   R E G I S T E R   T I M I N G   A N D   C I R C U I T R Y
 
################################################################################################################################################################################################################################################


   stallOut ----o------------o--------------------o---------------------------------------o-----------------------.
                |            |                    |                                       |                       |   .- -.
                |            |                    |     .-----------------------------.   |                 |`.   |   :>  :*
                |   .- -.    |    .---.    .======+====>| request_r          response |===+==o=============>|1 |  '-->:E  :
                |   :>  :*   |    |>  |    |      v     |                             |   |  |    .---.     |  |=====>:D Q:===> response_s
                '-->:E  :    '--->|E  |    |    |`.     |         Cache + MMU         |   |  |    |>  | .==>|0 |  :   '- -'
    request =======>:D Q:====o===>|D Q|====o===>|1 |    |                             |   |  '===>|D Q|='_r |,'  response_l
                    '- -'    |    '---'         |  |===>| request_l          complete |---+--o--->|E  |       ^    
                             '=================>|0 |    '-----------------------------'   |  |    '---'       |    _____
                             request_s          |,'                                       |  o----------------o----\    \
                                                                                          |  |    .---.             )    )O---> stallIn
                                                                                          |  |    |>  |  .---------/____/
* = optional registers (individually selectable)                                          |  '--->|S  |  |completed
                                                                                          '------>|R Q|--'
With the input register:                                                                          '---'
             _   _   _   _   _   _   _   _   _   _   _   _   _
       clk  / \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_
            ____     _______     _______     _______     _______
  stallOut      \___/       \___/       \___/       \___/   
                 ___         ___         ___         ___
   request  XXXXX_3_XXXXXXXXX_4_XXXXXXXXX_5_XXXXXXXXX_6_XXXXXXXX
            ________ ___________ ___________ ___________ _______
 request_s  ___2____X_____3_____X_____4_____X_____5_____X___6___    (after pipeline stage)
            ____________________ ___________ ___________ _______
 request_r  ___1____X_____2_____X_____3_____X_____4_____X___5___    (registered)
            ________________ ___________ ___________ ___________
 request_l  _1__X_____2_____X_____3_____X_____4_____X_____5_____    (latched)
                 ___     ___     ___                 _______
  complete  ____/   \___/   \___/   \_______________/       \___
                             ___     _______                 ___
 completed  ________________/   \___/       \_______________/
            ____     ___                     _______
   stallIn      \___/   \___________________/       \___________
                 ___     ___     ___                 ___ ___request_stage
  response  XXXXX_1_XXXXX_2_XXXXX_3_XXXXXXXXXXXXXXXXX_4_X_5_XXXX
            ________ _______ _______ ___________________ ___ ___
response_r  ___0____X___1___X___2___X_________3_________X_4_X_5_    (registered)
            ____ _______ _______ ___________________ ___ _______
response_l  _0__X___1___X___2___X_________3_________X_4_X___5___    (latched)
            ____________________ ___________ ___________ _______
response_s  ___0____X_____1_____X_____2_____X_____3_____X___4___    (after pipeline stage)
            ____     _______     _______     _______     _______
(stallOut)      \___/       \___/       \___/       \___/   
                

Without the input register:
             _   _   _   _   _   _   _   _   _   _   _   _   _
       clk  / \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_
            ____     _______     _______     _______     _______
  stallOut      \___/       \___/       \___/       \___/   
                 ___         ___         ___         ___
   request  XXXXX_2_XXXXXXXXX_3_XXXXXXXXX_4_XXXXXXXXX_5_XXXXXXXX
                 ___         ___         ___         ___
 request_s  XXXXX_2_XXXXXXXXX_3_XXXXXXXXX_4_XXXXXXXXX_5_XXXXXXXX
            ____________________ ___________ ___________ _______
 request_r  ___1____X_____2_____X_____3_____X_____4_____X___5___
            ________________ ___________ ___________ ___________
 request_l  _1__X_____2_____X_____3_____X_____4_____X_____5_____
                 ___     ___     ___                 _______
  complete  ____/   \___/   \___/   \_______________/       \___
                             ___     _______                 ___
 completed  ________________/   \___/       \_______________/
            ____     ___                     _______
   stallIn      \___/   \___________________/       \___________
                 ___     ___     ___                 ___ ___
  response  XXXXX_1_XXXXX_2_XXXXX_3_XXXXXXXXXXXXXXXXX_4_X_5_XXXX
            ________ _______ _______ ___________________ ___ ___
response_r  ___0____X___1___X___2___X_________3_________X_4_X_5_
            ____ _______ _______ ___________________ ___ _______
response_l  _0__X___1___X___2___X_________3_________X_4_X___5___
            ____________________ ___________ ___________ _______
response_s  ___0____X_____1_____X_____2_____X_____3_____X___4___
            ____     _______     _______     _______     _______
(stallOut)      \___/       \___/       \___/       \___/   




################################################################################################################################################################################################################################################

 A D D R E S S   T R A N S L A T I O N   D A T A F L O W   A N D   N A M I N G
 
################################################################################################################################################################################################################################################



Cache block size <= page size:

.-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-.
|       asid        |                          virtAddress                          |
| ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' ' ' |
|       asid        |       l1tag       |       l2tag       |                       |
'-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' ' ' ' ' |
`----------------------------. ,----------------------------' |virtCaOffs |  index  |
                              V                  .------------|predCaOffs |         |
                              v                  v            | ' ' ' ' ' | ' ' ' ' |
                          .-------.          .-------.        |           |         |
                          |  TLB  |          | Cache |        | ' ' ' ' ' | ' ' ' ' |
======================================================================================= 1 cycle
            .-------.     |       |          |       |        | ' ' ' ' ' | ' ' ' ' |
   bus <--->|  TW   |<----|       |          |       |        |           |         |
======================================================================================= 1+ cycles if TLB miss
   bus <--->|       |---->|       |          |       |        | ' ' ' ' ' | ' ' ' ' |
            '-------'     '-------'          :       :        |           |         |
                              |                               | ' ' ' ' ' | ' ' ' ' |
                    ,---------^------------------------------.|           |         |
                    .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' ' ' ' ' |
                    |                          physAddress                          |
                    | ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' | ' ' ' ' ' | ' ' ' ' |
                    |                  caTag                  |  caOffs   |  index  |
                    '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-'
                    `------------------. ,--------------------------------'
                                        V
                                        |    :       :
                                        '--->| Cache |
                                    bus <--->|       |
======================================================================================= 1+ cycles if miss/bypass/write
                                    bus <--->|       |
                                             '-------'
                                                 |
                                                 v
                                               data
.


Cache block size > page size:

.-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-.
|       asid        |                          virtAddress                          |
| ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' ' ' |
|       asid        |       l1tag       |       l2tag       |                       |
'-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' ' ' | ' ' ' ' |
`----------------------------. ,------------------------+---'             |         |
                              V                         |   virtCaOffs    |  index  |
                              |                         '-+-+ ' ' ' ' ' ' | ' ' ' ' |
                              |                        /___/|             |         |
                              |                        v    |             |         |
                              |                  .-------.  | ' ' ' ' ' ' | ' ' ' ' |
                              |                  | offs. |  |             |         |
                              |                  | pred. |  |             |         |
                              |                  '-------'  | ' ' ' ' ' ' | ' ' ' ' |
                              |                        |___ |             |         |             
                              |                        \   \|             |         |
                              |                         .-+-+ ' ' ' ' ' ' | ' ' ' ' |
                              |                  .------|   predCaOffs    |  index  |
                              v                  v      '-+-+             |         |
                          .-------.          .-------.      | ' ' ' ' ' ' | ' ' ' ' |
                          |  TLB  |          | Cache |      |             |         |
======================================================================================= 1 cycle
            .-------.     |       |          |       |      | ' ' ' ' ' ' | ' ' ' ' |
   bus <--->|  TW   |<----|       |          |       |      |             |         |
======================================================================================= 1+ cycles if TLB miss
   bus <--->|       |---->|       |          |       |      | ' ' ' ' ' ' | ' ' ' ' |
            '-------'     '-------'          :       :      |             |         |
                              |                             | ' ' ' ' ' ' | ' ' ' ' |
                    ,---------^----------------------------.|             |         |
                    .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' ' ' ' ' ' |
                    |                          physAddress                          |
                    | ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' | ' ' ' ' |
                    |               caTag               |     caOffs      |  index  |
                    '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-'
                    `------------------. ,--------------------------------'
                                        V               \___\
                                        |    :       :       `--> offs. pred. update
                                        '--->| Cache |
======================================================================================= 1 cycle if predCaOffs != caOffs
                                    bus <--->|       |
======================================================================================= 1+ cycles if miss/bypass/write
                                    bus <--->|       |
                                             '-------'
                                                 |
                                                 v
                                               data
.




################################################################################################################################################################################################################################################

 P A G E   T A B L E / D I R E C T O R Y   S T R U C T U R E
 
################################################################################################################################################################################################################################################


-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-| ----------
-- |        Large page ptag        ::::::::::::|X|G|1|D|A|C|W|U|R|1|
-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|    Page
-- |        Page table base        ::::::::::::|X|-|0|-|A|-|-|U|R|1| directory
-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|  entries
-- |                              -                              |0|
-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-| ----------
-- |        Normal page ptag       ::::::::::::|X|G|-|D|A|C|W|U|R|1|    Page
-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|   table
-- |                              -                              |0|  entries
-- |-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-|-+-+-+-+-+-+-+-| ----------
--                                              | | | | | | | | | |
--                                              X G S D A C W U R P
--                                              | | | | | | | | | '-> Present
--                                              | | | | | | | | '-> wRitable
--                                              | | | | | | | '-> User
--                                              | | | | | | '-> Write-through
--                                              | | | | | '-> Cache disable
--                                              | | | | '-> Accessed
--                                              | | | '-> Dirty
--                                              | | '-> page Size
--                                              | '-> Global
--                                              '-> eXecutable


TLB entry: PTag D C W U R (normal memory)  +  G S (parallel-access registers)



################################################################################################################################################################################################################################################

 P S E U D O C O D E   F O R   T L B / T A B L E   W A L K E R   O P E R A T I O N S
 
################################################################################################################################################################################################################################################


if tlb_miss or (write and !page_dirty):
  read page directory entry (pde)
  
  if !pde.present:
    RVEX_TRAP_xMEM_PAGE_FAULT
  if !kernel_mode and !pde.user:
    RVEX_TRAP_xMEM_KSPACE_VIO
  if write and !pde.writable and (!kernel_mode or write_protect):
    RVEX_TRAP_DMEM_WRITE_VIO
  if write and pde.writable and !pde.dirty and write_to_clean_ena:
    RVEX_TRAP_DMEM_WRITE_TO_CLEAN
  if instruction fetch and !pde.executable and enable_executable:
    RVEX_TRAP_IMEM_ACCESS_VIO
  
  if !pde.accessed:
    set pde.accessed
  if write and pde.large_page and !pde.dirty:
    set pde.dirty
  
  tlb.flags = pde.flags
  
  if !pde.large_page:
    read page table entry (pte)
    
    if !pte.present:
      RVEX_TRAP_xMEM_PAGE_FAULT
    if !kernel_mode and !pte.user:
      RVEX_TRAP_xMEM_KSPACE_VIO
    if write and !pte.writable and (!kernel_mode or write_protect):
      RVEX_TRAP_DMEM_WRITE_VIO
    if write and pte.writable and !pte.dirty and write_to_clean_ena:
      RVEX_TRAP_DMEM_WRITE_TO_CLEAN
    if instruction fetch and !pte.executable and enable_executable:
      RVEX_TRAP_IMEM_ACCESS_VIO
    
    if !pte.accessed:
      set pte.accessed
    if write and !pte.dirty:
      set pte.dirty
    
    tlb.dirty |= pte.dirty
    tlb.cache_disable |= pte.cache_disable
    tlb.write_through &= pte.write_through
    tlb.user &= pte.user
    tlb.writable &= pte.writable
  
  
  start tlb update
  
  if pde flags modified:
    write page directory entry
  if pte flags modified:
    write page table entry
  

if !kernel_mode and !page_user:
  RVEX_TRAP_xMEM_KSPACE_VIO
if write and !page_writable and (!kernel_mode or write_protect):
  RVEX_TRAP_DMEM_WRITE_VIO
.









################################################################################################################################################################################################################################################

 R A N D O M   N O T E S
 
################################################################################################################################################################################################################################################



.-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-. ----------------------------------
|       asid        |                          virtAddress                          |
| ' ' ' ' ' ' ' ' ' | ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' | <-- MMU input
|       asid        |       l1tag       |       l2tag       |      [pageOffs]       |
'-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' ' ' | ' ' ' ' | ----------------------------------
                                                        |   virtCaOffs    |         | <-- Offset predictor input
                                                        |-+-+ ' ' ' ' ' ' | ' ' ' ' | ----------------------------------
                                                        |   predCaOffs    |  index  | <-- Cache input (before translation)
                    .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ' ' ' ' ' ' | ' ' ' ' |
                    |               caTag               |     caOffs      |  index  | <-- Cache input (after translation)
.                   '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-'


MMU:               asid/l1tag/l2tag ---> caTag
Offset predictor:  l2Tag/pageOffs   ---> predCaOffs           (only if cache block size > normal page size)
Cache (before):    predCaOffs       ---> curCaTag/valid/data  (only if cache block size > normal page size)
Cache (after):     caOffs           ---> curCaTag/valid/data



first:
 - predict the overlap between l2tag and the cache offset based on previous requests with that virtual overlap
 - query cache blocks with predCaOffs
 - query TLB with asid/l1tag/l2tag

TLB miss:
 - wait for table walker to update TLB or return page fault

offset mispredict:
 - query cache blocks with caOffs

cache 







Cache tag memory (address tag):
 - 1 read/write for normal operation
 - 1 read for streaming port
 - 1 read for snooping

Cache state memory (2 bits per byte; invalid, valid, dirty, local):
 - 1 read/write for normal operation
 - 1 read for streaming port

Cache data memory:
 - 1 read/write for normal operation
 - 1 read for streaming port

Line valid bits:
 - 1 read/set for normal operation
 - 1 read for streaming port
 - 1 clear for snooping
 - master reset for flush
.






CACHE BLOCK RESIZING STUFF

paper: http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6404160

goal: try to keep data from the previous configuration to prevent excessive transient misses

method:
 - maintain a current state bit, which toggles every cache size reconfiguration
 - store an extra bit per line as well
 - whenever a cache access occurs, set the extra bit to the current state bit
 - when a resize reconfiguration occurs, invalidate all cache entries which have
   their bit set to !current_state. This must be done because these entries have
   not been kept up-to-date by the snooper.
 - try to have a transition period after the resize request where reads still
   come from the old config and updates go to both the previous and new
   configuration




















