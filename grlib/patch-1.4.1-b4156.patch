diff -rupN --exclude tech clean/grlib-gpl-1.4.1-b4156/bin/Makefile grlib-gpl-1.4.1-b4156/bin/Makefile
--- clean/grlib-gpl-1.4.1-b4156/bin/Makefile	2015-05-06 15:12:06.000000000 +0200
+++ grlib-gpl-1.4.1-b4156/bin/Makefile	2015-06-01 14:57:15.164490461 +0200
@@ -251,7 +251,7 @@ avhdl-clean:
 
 ifeq ("$(GRLIB_SIMULATOR)", "ALDEC")
 riviera: make.riviera
-	@MTI_DEFAULT_LIB_TYPE=0 vsimsa -quiet -do "do libs.do; quit"
+	MTI_DEFAULT_LIB_TYPE=0 vsimsa -quiet -do "do libs.do; quit"
 	make -f make.riviera
 
 riviera-run:
@@ -1184,14 +1184,14 @@ endif
 	@echo "set_property strategy $(PLANAHEAD_SYNTH_STRATEGY) [get_runs synth_1]" >> ./planahead/$(TOP)_planAhead.tcl
 	@echo "# Elaborate design to be able to apply SDC to top level" >> ./planahead/$(TOP)_planAhead_run.tcl
 	@echo "launch_runs -jobs 1 synth_1" >> ./planahead/$(TOP)_planAhead_run.tcl
-	@echo "wait_on_run -timeout 120 synth_1" >> ./planahead/$(TOP)_planAhead_run.tcl
+	@echo "wait_on_run -timeout 1200 synth_1" >> ./planahead/$(TOP)_planAhead_run.tcl
 	@echo "# Launch place and route" >> ./planahead/$(TOP)_planAhead_run.tcl
 	@echo "set_property strategy $(PLANAHEAD_IMPL_STRATEGY) [get_runs impl_1]" >> ./planahead/$(TOP)_planAhead_run.tcl
 #	@echo "set_property steps.map.args.mt on [get_runs impl_1]" >> ./planahead/$(TOP)_planAhead_run.tcl
 #	@echo "set_property steps.par.args.mt 4 [get_runs impl_1]" >> ./planahead/$(TOP)_planAhead_run.tcl
 	@echo "set_property steps.bitgen.args.m true [get_runs impl_1]" >> ./planahead/$(TOP)_planAhead_run.tcl
 	@echo "launch_runs -jobs 1 impl_1 -to_step Bitgen" >> ./planahead/$(TOP)_planAhead_run.tcl
-	@echo "wait_on_run -timeout 120 impl_1" >> ./planahead/$(TOP)_planAhead_run.tcl
+	@echo "wait_on_run -timeout 1200 impl_1" >> ./planahead/$(TOP)_planAhead_run.tcl
 ifeq ("$(PROTOBOARD)","zedBoard")
 	@echo "export_hardware [get_files ./planahead/xps_files/leon3_zedboard/leon3_zedboard.xmp] [get_runs impl_1] -bitstream" >> ./planahead/$(TOP)_planAhead_run.tcl
 endif
diff -rupN --exclude tech clean/grlib-gpl-1.4.1-b4156/lib/grlib/amba/ahbctrl.vhd grlib-gpl-1.4.1-b4156/lib/grlib/amba/ahbctrl.vhd
--- clean/grlib-gpl-1.4.1-b4156/lib/grlib/amba/ahbctrl.vhd	2015-05-06 15:12:28.000000000 +0200
+++ grlib-gpl-1.4.1-b4156/lib/grlib/amba/ahbctrl.vhd	2015-06-01 14:57:54.131438464 +0200
@@ -34,6 +34,7 @@ use grlib.config_types.all;
 use grlib.config.all;
 -- pragma translate_off
 use grlib.devices.all;
+use grlib.testlib;
 use std.textio.all;
 -- pragma translate_on
 
diff -rupN --exclude tech clean/grlib-gpl-1.4.1-b4156/lib/grlib/amba/devices.vhd grlib-gpl-1.4.1-b4156/lib/grlib/amba/devices.vhd
--- clean/grlib-gpl-1.4.1-b4156/lib/grlib/amba/devices.vhd	2015-05-06 15:12:28.000000000 +0200
+++ grlib-gpl-1.4.1-b4156/lib/grlib/amba/devices.vhd	2015-06-01 14:59:11.600323002 +0200
@@ -65,6 +65,7 @@ package devices is
   constant VENDOR_CAL        : amba_vendor_type := 16#CA#;
   constant VENDOR_CETON      : amba_vendor_type := 16#CB#;
   constant VENDOR_EMBEDDIT   : amba_vendor_type := 16#EA#;
+  constant VENDOR_TUDELFT    : amba_vendor_type := 16#DE#;
 
 -- Cobham Gaisler device ids
 
@@ -350,6 +351,12 @@ package devices is
   constant CONTRIB_CORE1        : amba_device_type := 16#001#;
   constant CONTRIB_CORE2        : amba_device_type := 16#002#;
 
+-- TU Delft device IDs
+
+  constant TUDELFT_RVEX         : amba_device_type := 16#001#;
+  constant TUDELFT_UART         : amba_device_type := 16#002#;
+  constant TUDELFT_BRIDGE       : amba_device_type := 16#003#;
+
 -- grlib system device ids
 
   subtype system_device_type  is integer range 0 to 16#ffff#;
@@ -875,6 +882,18 @@ package devices is
       vendordesc        => C3E_DESC,
       device_table      => c3e_device_table
       );
+      
+  constant TUDELFT_DESC : vendor_description :=   "TU Delft                ";
+  constant tudelft_device_table : device_table_type := (
+      TUDELFT_RVEX          => "r-VEX Processor                ",
+      TUDELFT_UART          => "Debug UART                     ",
+      TUDELFT_BRIDGE        => "Peripheral bridge              ",
+      others                => "Unknown Device                 ");
+  constant tudelft_lib : vendor_library_type := (
+      vendorid          => VENDOR_TUDELFT,
+      vendordesc        => TUDELFT_DESC,
+      device_table      => tudelft_device_table
+      );
   
   constant UNKNOWN_DESC : vendor_description :=  "Unknown vendor          ";
 
@@ -907,6 +926,7 @@ package devices is
     VENDOR_ACTEL       => actel_lib,
     VENDOR_NASA        => nasa_lib,
     VENDOR_S3          => s3_lib,
+    VENDOR_TUDELFT     => tudelft_lib,
     others             => unknown_lib);
 
   type system_table_type is array (0 to 4095) of device_description;
