/* This file is generated by the scripts in /config. */

///                                                                                                  /* GENERATED */
// r-VEX simulator.
//
// Copyright (C) 2008-2015 by TU Delft.
// All Rights Reserved.
//
// THIS IS A LEGAL DOCUMENT, BY USING r-VEX,
// YOU ARE AGREEING TO THESE TERMS AND CONDITIONS.
//
// No portion of this work may be used by any commercial entity, or for any
// commercial purpose, without the prior, written permission of TU Delft.                            /* GENERATED */
// Nonprofit and noncommercial use is permitted as described below.
//
// 1. r-VEX is provided AS IS, with no warranty of any kind, express
// or implied. The user of the code accepts full responsibility for the
// application of the code and the use of any results.
//
// 2. Nonprofit and noncommercial use is encouraged. r-VEX may be
// downloaded, compiled, synthesized, copied, and modified solely for nonprofit,
// educational, noncommercial research, and noncommercial scholarship
// purposes provided that this notice in its entirety accompanies all copies.                        /* GENERATED */
// Copies of the modified software can be delivered to persons who use it
// solely for nonprofit, educational, noncommercial research, and
// noncommercial scholarship purposes provided that this notice in its
// entirety accompanies all copies.
//
// 3. ALL COMMERCIAL USE, AND ALL USE BY FOR PROFIT ENTITIES, IS EXPRESSLY
// PROHIBITED WITHOUT A LICENSE FROM TU Delft (J.S.S.M.Wong@tudelft.nl).
//
// 4. No nonprofit user may place any restrictions on the use of this software,
// including as modified by the user, by any other authorized user.                                  /* GENERATED */
//
// 5. Noncommercial and nonprofit users may distribute copies of r-VEX
// in compiled or binary form as set forth in Section 2, provided that
// either: (A) it is accompanied by the corresponding machine-readable source
// code, or (B) it is accompanied by a written offer, with no time limit, to
// give anyone a machine-readable copy of the corresponding source code in
// return for reimbursement of the cost of distribution. This written offer
// must permit verbatim duplication by anyone, or (C) it is distributed by
// someone who received only the executable form, and is accompanied by a
// copy of the written offer of source code.                                                         /* GENERATED */
//
// 6. r-VEX was developed by Stephan Wong, Thijs van As, Fakhar Anjam,
// Roel Seedorf, Anthony Brandon, Jeroen van Straten. r-VEX is currently
// maintained by TU Delft (J.S.S.M.Wong@tudelft.nl).
//
// Copyright (C) 2008-2015 by TU Delft.
///

#include <cstdio>
                                                                                                     /* GENERATED */
#include "Core.h"
#include "CoreTypes.h"
#include "Generated.h"

using namespace std;

namespace Core {


//==============================================================================                     /* GENERATED */
// Opcode decoding table
//==============================================================================

const opcodeTableEntry_t OPCODE_TABLE[256] = {
    { /* 0x00 = MPYLL */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 1 }},                        /* GENERATED */
    { /* 0x01 = MPYLLU */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 1, 1, 1 }},
    { /* 0x02 = MPYLH */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_HIGH_HALF, 0, 0, 1 }},
    { /* 0x03 = MPYLHU */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_HIGH_HALF, 1, 1, 1 }},
    { /* 0x04 = MPYHH */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_HIGH_HALF, U_OP2SEL_HIGH_HALF, 0, 0, 1 }},
    { /* 0x05 = MPYHHU */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_HIGH_HALF, U_OP2SEL_HIGH_HALF, 1, 1, 1 }},                      /* GENERATED */
    { /* 0x06 = MPYL */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_WORD, U_OP2SEL_LOW_HALF, 0, 0, 1 }},
    { /* 0x07 = MPYLU */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_WORD, U_OP2SEL_LOW_HALF, 1, 1, 1 }},
    { /* 0x08 = MPYH */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_WORD, U_OP2SEL_HIGH_HALF, 0, 0, 1 }},
    { /* 0x09 = MPYHU */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_WORD, U_OP2SEL_HIGH_HALF, 1, 1, 1 }},
    { /* 0x0A = MPYHS */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_SHL16, U_OP1SEL_WORD, U_OP2SEL_HIGH_HALF, 0, 0, 1 }},                          /* GENERATED */
    { /* 0x0B = MOVTL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x0C = MOVFL */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x0D = LDW */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 1, 0, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x0E = STW */ { 0, 1 },
        { D_FUNCSEL_ALU, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 1, 0, 0, 1 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x0F = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x10 = LDW */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 1, 0, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x11 = LDH */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_HALFWORD, 1, 0, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x12 = LDHU */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_HALFWORD, 1, 1, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x13 = LDB */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_BYTE, 1, 0, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x14 = LDBU */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_BYTE, 1, 1, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x15 = STW */ { 0, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 1, 0, 0, 1 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x16 = STH */ { 0, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_HALFWORD, 1, 0, 0, 1 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x17 = STB */ { 0, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_BYTE, 1, 0, 0, 1 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x18 = SHR */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_SHIFTER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x19 = SHRU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_SHIFTER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x1A = SUB */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_TRUE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x1B = SXTB */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND8, A_OP2MUX_ZERO, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x1C = SXTH */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND16, A_OP2MUX_ZERO, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x1D = ZXTB */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND8, A_OP2MUX_ZERO, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x1E = ZXTH */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND16, A_OP2MUX_ZERO, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x1F = XOR */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_XOR, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x20 = GOTO */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 1, 0, 0, 1, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x21 = IGOTO */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 1, 1, 0, 1, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x22 = CALL */ { 1, 1 },
        { D_FUNCSEL_PCP1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },                                      /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 1, 0, 1, 1, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x23 = ICALL */ { 1, 1 },
        { D_FUNCSEL_PCP1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 1, 1, 1, 1, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x24 = BR */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 0, 0, 0, 1, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x25 = BRF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 0, 1, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x26 = RETURN */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 1, 0, 1, 1, 0, 1, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x27 = RFI */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 1, 0, 0, 0, 0, 0, 1 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x28 = STOP */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 1, 1, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x29 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x2A = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x2B = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x2C = SBIT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_SET_BIT, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_TRUE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x2D = SBITF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_SET_BIT, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x2E = LDBR */ { 0, 1 },
        { D_FUNCSEL_MEM, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_BYTE, 1, 1, 1, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x2F = STBR */ { 0, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_BYTE, 1, 0, 0, 1 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x30 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x31 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x32 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x33 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x34 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x35 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x36 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x37 = SLCTF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_INVERT, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x38 = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x39 = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x3A = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x3B = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x3C = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x3D = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x3E = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x3F = SLCT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x40 = CMPEQ */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_EQ, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x41 = CMPEQ */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_EQ, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x42 = CMPGE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x43 = CMPGE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x44 = CMPGEU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x45 = CMPGEU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x46 = CMPGT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GT, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x47 = CMPGT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GT, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x48 = CMPGTU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GT, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x49 = CMPGTU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_GT, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x4A = CMPLE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x4B = CMPLE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x4C = CMPLEU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x4D = CMPLEU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x4E = CMPLT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LT, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x4F = CMPLT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LT, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x50 = CMPLTU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LT, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x51 = CMPLTU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_LT, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x52 = CMPNE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_NE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x53 = CMPNE */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_CMP_NE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x54 = NANDL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_NAND, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x55 = NANDL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_NAND, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x56 = NORL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_NOR, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x57 = NORL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_NOR, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x58 = ORL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_OR, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x59 = ORL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_OR, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x5A = ANDL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_AND, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x5B = ANDL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_LOGIC_AND, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x5C = TBIT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_TBIT, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x5D = TBIT */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_TBIT, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x5E = TBITF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_TBITF, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x5F = TBITF */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BOOL, A_BRRESULTMUX_TBITF, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x60 = NOP */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x61 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x62 = ADD */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x63 = AND */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x64 = ANDC */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x65 = MAX */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x66 = MAXU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_CMP_GE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x67 = MIN */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x68 = MINU */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_OP_SEL, A_BRRESULTMUX_CMP_LE, A_OPBRMUX_TRUE, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x69 = OR */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x6A = ORC */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32INV, A_OP2MUX_EXTEND32, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x6B = SH1ADD */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x6C = SH2ADD */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL2, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x6D = SH3ADD */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL3, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x6E = SH4ADD */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL4, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x6F = SHL */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_SHIFTER, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 1, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x70 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x71 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x72 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x73 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x74 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x75 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x76 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x77 = DIVS */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_SHL1, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_DIVS, A_OPBRMUX_PASS, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x78 = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x79 = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x7A = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x7B = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x7C = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x7D = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x7E = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x7F = ADDCG */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_ADDER, A_BRRESULTMUX_CARRY_OUT, A_OPBRMUX_PASS, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x80 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x81 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x82 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x83 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x84 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x85 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x86 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x87 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x88 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x89 = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x8A = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x8B = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x8C = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x8D = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x8E = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x8F = LIMMH */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x90 = TRAP */ { 1, 1 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x91 = CLZ */ { 1, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
        { A_BITWISEOP_BITW_AND, A_OP1MUX_EXTEND32, A_OP2MUX_EXTEND32, A_INTRESULTMUX_CLZ, A_BRRESULTMUX_PASS, A_OPBRMUX_FALSE, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x92 = MPYLHUS */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_SHR32, U_OP1SEL_WORD, U_OP2SEL_LOW_HALF, 1, 0, 1 }},
    { /* 0x93 = MPYHHS */ { 1, 1 },
        { D_FUNCSEL_MUL, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_SHR16, U_OP1SEL_WORD, U_OP2SEL_HIGH_HALF, 0, 0, 1 }},
    { /* 0x94 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x95 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x96 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x97 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x98 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x99 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x9A = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x9B = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0x9C = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x9D = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x9E = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0x9F = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xA1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xA6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xA9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xAA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xAB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xAC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xAD = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xAE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xAF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xB0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xB5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xB9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xBA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xBB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xBC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xBD = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xBE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xBF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xC4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xC8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xC9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xCA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xCB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xCC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xCD = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xCE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xCF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xD3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xD8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xD9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xDA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xDB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xDC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xDD = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xDE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xDF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xE2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xE7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xE9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xEA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xEB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xEC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xED = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xEE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xEF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF0 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xF1 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF2 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF3 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF4 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF5 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xF6 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF7 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF8 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xF9 = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xFA = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},                        /* GENERATED */
    { /* 0xFB = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xFC = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },                                                                     /* GENERATED */
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xFD = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xFE = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },                                       /* GENERATED */
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }},
    { /* 0xFF = undefined */ { 0, 0 },
        { D_FUNCSEL_ALU, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
        { A_BITWISEOP_BITW_OR, A_OP1MUX_EXTEND32, A_OP2MUX_ZERO, A_INTRESULTMUX_BITWISE, A_BRRESULTMUX_PASS, A_OPBRMUX_PASS, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0 },
        { M_ACCESSSIZEBLOG2_ACCESS_SIZE_WORD, 0, 0, 0, 0 },
        { U_RESULTSEL_PASS, U_OP1SEL_LOW_HALF, U_OP2SEL_LOW_HALF, 0, 0, 0 }}                         /* GENERATED */
};


} /* namespace Core */
